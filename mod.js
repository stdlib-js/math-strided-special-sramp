// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e=function(){try{return r({},"x",{}),!0}catch(r){return!1}},t=Object.defineProperty,n=Object.prototype,a=n.toString,o=n.__defineGetter__,u=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__;var c=t,f=function(r,e,t){var c,f,_,p;if("object"!=typeof r||null===r||"[object Array]"===a.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===a.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((f="value"in t)&&(i.call(r,e)||l.call(r,e)?(c=r.__proto__,r.__proto__=n,delete r[e],r[e]=t.value,r.__proto__=c):r[e]=t.value),_="get"in t,p="set"in t,f&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&o&&o.call(r,e,t.get),p&&u&&u.call(r,e,t.set),r},_=e()?c:f;var p=function(r,e,t){_(r,e,{configurable:!1,enumerable:!1,writable:!1,value:t})};var v=function(r,e,t,n,a,o){var u,i,l;if(r<=0)return n;for(u=t<0?(1-r)*t:0,i=a<0?(1-r)*a:0,l=0;l<r;l++)n[i]=o(e[u]),u+=t,i+=a;return n},y=function(r,e,t,n,a,o,u,i){var l,c,f;if(r<=0)return a;for(l=n,c=u,f=0;f<r;f++)a[c]=i(e[l]),l+=t,c+=o;return a};p(v,"ndarray",y);var b=v;var d=function(r){return r!=r};var s=function(r){return d(r)?NaN:r>0?r:0};function j(r,e,t,n,a){return b(r,e,t,n,a,s)}function g(r,e,t,n,a,o,u){return y(r,e,t,n,a,o,u,s)}p(j,"ndarray",g);export{j as default,g as ndarray};
//# sourceMappingURL=mod.js.map
